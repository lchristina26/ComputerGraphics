/****************************************************************************
**
** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the QtCanvas3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPLv3 included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or later as published by the Free 
** Software Foundation and appearing in the file LICENSE.GPL included in 
** the packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 2.0 requirements will be
** met: http://www.gnu.org/licenses/gpl-2.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example plasmaeffects
    \since QtCanvas3D 1.0
    \title Plasma Effects Example
    \ingroup qtcanvas3d-examples
    \brief Apply oldsk00l plasma effects into a canvas

    The Plasma Effects Example concentrates on showing how to use different shaders in Canvas3D.
    These shaders are of "old school graphics demo" variety that achieve their effects with raw
    computations based on combining output of trigonometrical functions in various ways. But they
    demonstrate how you can hand over high intensity calculations to the Graphics Processing Unit
    (GPU) when using QtCanvas3D.

    For a more thorough look into the QML side see the \l {Textured Cube Example} and
    for a more thorough look into the JavaScript side see the \l {Lit and Textured Cube Example}.

    \image plasmaeffects-example.png

    \section1 Initialization

    During \c{initGL}'s shader initialization, we'll create two separate shader programs.

    First for the cubes:

    \snippet plasmaeffects/qml/plasmaeffects/plasmaeffects.js 0

    Then for the background:

    \snippet plasmaeffects/qml/plasmaeffects/plasmaeffects.js 1

    We'll need to use them one by one to get the uniform locations:

    \snippet plasmaeffects/qml/plasmaeffects/plasmaeffects.js 2
    \dots 0
    \snippet plasmaeffects/qml/plasmaeffects/plasmaeffects.js 3

    \section1 Usage

    To use the shaders, simply take the right one into use before drawing in \c{renderGL}:

    \snippet plasmaeffects/qml/plasmaeffects/plasmaeffects.js 4
    \dots 0
    \snippet plasmaeffects/qml/plasmaeffects/plasmaeffects.js 5
 */
